# Generated by Django 4.1.6 on 2023-02-15 09:10

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(verbose_name='Сайт')),
                ('surname', models.CharField(max_length=100, verbose_name='Фамилия')),
                ('name', models.CharField(max_length=100, verbose_name='Имя')),
                ('patronymic', models.CharField(blank=True, max_length=100, null=True, verbose_name='Отчество')),
            ],
            options={
                'verbose_name': 'Заказчик',
                'verbose_name_plural': 'Заказчик',
            },
        ),
        migrations.CreateModel(
            name='CustomerGoal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Наименование')),
            ],
            options={
                'verbose_name': 'Целеполагание заказчика',
                'verbose_name_plural': 'Целеполагание заказчика',
            },
        ),
        migrations.CreateModel(
            name='CustomerType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Наименование')),
            ],
            options={
                'verbose_name': 'Тип заявки',
                'verbose_name_plural': 'Тип заявки',
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Полное наименование')),
                ('short_name', models.CharField(max_length=10, verbose_name='Краткое наименование')),
                ('head_fio', models.CharField(max_length=150, verbose_name='Фио руководителя')),
            ],
            options={
                'verbose_name': 'Университет',
                'verbose_name_plural': 'Университет',
            },
        ),
        migrations.CreateModel(
            name='DepthTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Наименование')),
            ],
            options={
                'verbose_name': 'Глубина проработки задачи',
                'verbose_name_plural': 'Глубина проработки задачи',
            },
        ),
        migrations.CreateModel(
            name='Disciplines',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Наименование')),
            ],
            options={
                'verbose_name': 'Дисциплина',
                'verbose_name_plural': 'Дисциплины',
            },
        ),
        migrations.CreateModel(
            name='EduLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Наименование')),
            ],
            options={
                'verbose_name': 'Уровень образования',
                'verbose_name_plural': 'Уровень образования',
            },
        ),
        migrations.CreateModel(
            name='FormatResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Наименование')),
            ],
            options={
                'verbose_name': 'Формат предполагаемого результата',
                'verbose_name_plural': 'Формат предполагаемого результата',
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10, verbose_name='Наимнование')),
            ],
            options={
                'verbose_name': 'Учебная группа',
                'verbose_name_plural': 'Учебная группа',
            },
        ),
        migrations.CreateModel(
            name='InternalApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('theme', models.CharField(max_length=150, verbose_name='Тема')),
                ('relevance', models.TextField(verbose_name='Обоснование актуальности')),
                ('research_purpose', models.CharField(max_length=255, verbose_name='Цель будущего исследования')),
                ('research_objectives', models.TextField(verbose_name='Задачи исследования')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.customer', verbose_name='Заказчик')),
                ('department', models.ManyToManyField(related_name='internalApp_department', to='main.department', verbose_name='Ответственное подразделение')),
                ('depthTask', models.ManyToManyField(related_name='internalApp_depthTash', to='main.depthtask', verbose_name='Глубина проработки задачи')),
                ('edu_level', models.ManyToManyField(related_name='internalApp_eduLevel', to='main.edulevel', verbose_name='Уровень образования')),
                ('format_result', models.ManyToManyField(related_name='internalApp_formatResult', to='main.formatresult', verbose_name='Формат результата')),
            ],
            options={
                'verbose_name': 'Внутрянняя заявка',
                'verbose_name_plural': 'Внутрянняя заявка',
            },
        ),
        migrations.CreateModel(
            name='KeyWords',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='Наименование')),
            ],
            options={
                'verbose_name': 'Ключевое слово',
                'verbose_name_plural': 'Ключевые слова',
            },
        ),
        migrations.CreateModel(
            name='PackageRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('theme', models.CharField(max_length=150, verbose_name='Тема')),
                ('description', models.TextField(verbose_name='Описание')),
                ('stages', models.TextField(verbose_name='Этапы')),
                ('wishes', models.TextField(verbose_name='Пожелания')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.customer', verbose_name='Заказчик')),
            ],
            options={
                'verbose_name': 'Пакетная заявка',
                'verbose_name_plural': 'Пакетная заявка',
            },
        ),
        migrations.CreateModel(
            name='University',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Полное наименование')),
                ('short_name', models.CharField(max_length=10, verbose_name='Сокращенное наименование')),
            ],
            options={
                'verbose_name': 'Университет',
                'verbose_name_plural': 'Университет',
            },
        ),
        migrations.CreateModel(
            name='PackageRequestProcessing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('theme', models.CharField(max_length=150, verbose_name='Предложения по корректировке формулировки исходной темы')),
                ('completion_dates', models.CharField(max_length=20, verbose_name='Сроки завершения работы над задачей')),
                ('research_purpose', models.CharField(max_length=255, verbose_name='Цель будущего исследования')),
                ('comment', models.TextField(verbose_name='Комментарий')),
                ('slug', models.SlugField(blank=True, null=True, unique=True)),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.packagerequest', verbose_name='Пакетная заявка')),
                ('department', models.ManyToManyField(related_name='packageRequestProcessing_department', to='main.department', verbose_name='Ответственное за реализацию подразделение')),
                ('depthTask', models.ManyToManyField(related_name='packageRequestProcessing_depthTash', to='main.depthtask', verbose_name='Глубина проработки задачи')),
                ('discipline', models.ManyToManyField(related_name='packageRequestProcessing_discipline', to='main.disciplines', verbose_name='Дисциплина')),
                ('group', models.ManyToManyField(related_name='packageRequestProcessing_groups', to='main.group', verbose_name='Группа')),
            ],
            options={
                'verbose_name': 'Обработка пакетных заявок',
                'verbose_name_plural': 'Обработка пакетных заявок',
            },
        ),
        migrations.CreateModel(
            name='InternalApplicationProcessing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('theme', models.CharField(max_length=150, verbose_name='Предложения по корректировке формулировки исходной темы')),
                ('completion_dates', models.CharField(max_length=20, verbose_name='Сроки завершения работы над задачей')),
                ('research_purpose', models.CharField(max_length=255, verbose_name='Цель будущего исследования')),
                ('comment', models.TextField(verbose_name='Комментарий')),
                ('slug', models.SlugField(blank=True, null=True, unique=True)),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.internalapplication', verbose_name='Внутрянняя заявка')),
                ('department', models.ManyToManyField(related_name='internalApplicationProcessing_department', to='main.department', verbose_name='Ответственное за реализацию подразделение')),
                ('depthTask', models.ManyToManyField(related_name='internalApplicationProcessing_depthTash', to='main.depthtask', verbose_name='Глубина проработки задачи')),
                ('discipline', models.ManyToManyField(related_name='internalApplicationProcessing_discipline', to='main.disciplines', verbose_name='Дисциплина')),
                ('group', models.ManyToManyField(related_name='internalApplicationProcessing_groups', to='main.group', verbose_name='Группа')),
            ],
            options={
                'verbose_name': 'Обработка внутренних заявок',
                'verbose_name_plural': 'Обработка внутренних заявок',
            },
        ),
        migrations.AddField(
            model_name='internalapplication',
            name='key_words',
            field=models.ManyToManyField(related_name='internalApp_keyWords', to='main.keywords', verbose_name='Ключевые слова'),
        ),
        migrations.AddField(
            model_name='department',
            name='university',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.university', verbose_name='Университет'),
        ),
        migrations.AddField(
            model_name='customer',
            name='customerType',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.customertype', verbose_name='Тип заказчика'),
        ),
        migrations.CreateModel(
            name='ApplicationAuthorityProcessing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('theme', models.CharField(max_length=150, verbose_name='Предложения по корректировке формулировки исходной темы')),
                ('completion_dates', models.CharField(max_length=20, verbose_name='Сроки завершения работы над задачей')),
                ('research_purpose', models.CharField(max_length=255, verbose_name='Цель будущего исследования')),
                ('comment', models.TextField(verbose_name='Комментарий')),
                ('slug', models.SlugField(blank=True, null=True, unique=True)),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.internalapplication', verbose_name='Внутрянняя заявка')),
                ('department', models.ManyToManyField(related_name='applicationAuthorityProcessing_department', to='main.department', verbose_name='Ответственное за реализацию подразделение')),
                ('depthTask', models.ManyToManyField(related_name='applicationAuthorityProcessing_depthTash', to='main.depthtask', verbose_name='Глубина проработки задачи')),
                ('discipline', models.ManyToManyField(related_name='applicationAuthorityProcessing_discipline', to='main.disciplines', verbose_name='Дисциплина')),
                ('group', models.ManyToManyField(related_name='applicationAuthorityProcessing_groups', to='main.group', verbose_name='Группа')),
            ],
            options={
                'verbose_name': 'Обработка заявок от органов власти',
                'verbose_name_plural': 'Обработка заявок от органов власти',
            },
        ),
        migrations.CreateModel(
            name='ApplicationAuthority',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('department_authority', models.CharField(max_length=150, verbose_name='Структурное подразделение')),
                ('authority_fio', models.CharField(max_length=150, verbose_name='ФИО заказчика')),
                ('authority_post', models.CharField(max_length=150, verbose_name='Должность ответственного от заказчика')),
                ('phone_number', models.CharField(blank=True, max_length=17, validators=[django.core.validators.RegexValidator(message="Номер телефона должен быть введен в формате: '+799999999'. Разрешено вводить до 15 символов.", regex='^\\+?1?\\d{9,15}$')], verbose_name='Телефон ответственного от заказчика')),
                ('mail', models.EmailField(max_length=254, verbose_name='Электронная почта ответственного от заказчика')),
                ('task_formulation', models.TextField(verbose_name='Формулировка задачи')),
                ('problem_formulation', models.TextField(verbose_name='Постановка задачи')),
                ('relevance', models.TextField(verbose_name='Актуальность и источники информации')),
                ('completion_dates', models.CharField(max_length=20, verbose_name='Сроки завершения работы над задачей')),
                ('research_purpose', models.CharField(max_length=255, verbose_name='Цель будущего исследования')),
                ('research_objectives', models.TextField(verbose_name='Задачи исследования')),
                ('programm', models.CharField(max_length=150, verbose_name='Направления, специальности')),
                ('wish_result', models.CharField(max_length=150, verbose_name='Ожидаемый результат')),
                ('other_info', models.TextField(blank=True, null=True, verbose_name='Прочая информация')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.customer', verbose_name='Заказчик')),
                ('depthTask', models.ManyToManyField(related_name='applicationAuthority_depthTash', to='main.depthtask', verbose_name='Глубина проработки задачи')),
                ('goal', models.ManyToManyField(related_name='applicationAuthority_customerGoal', to='main.customergoal', verbose_name='Целеполагание заказчика')),
                ('key_words', models.ManyToManyField(related_name='applicationAuthority_keyWords', to='main.keywords', verbose_name='Ключевые слова')),
            ],
            options={
                'verbose_name': 'Заявки органов власти',
                'verbose_name_plural': 'Заявки органов власти',
            },
        ),
    ]
